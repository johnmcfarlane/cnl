---
name: pr

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  # Build and test latest on Linux using only CMake
  cmake:
    strategy:
      matrix:
        compiler: [clang, gcc]
        include:
          - compiler: clang
            stdlib-flag: "-stdlib=libc++"
            toolchain: clang-libc++.cmake
            container: johnmcfarlane/cnl_ci:clang-head-libcpp
          - compiler: gcc
            stdlib-flag: ""
            toolchain: gcc-head.cmake
            container: johnmcfarlane/cnl_ci:gcc-head
        build_type: ["Debug", "Release"]
        cxx-extensions: ["ON", "OFF"]
        exceptions: ["ON", "OFF"]

    container: ${{matrix.container}}
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Restore caches
        uses: actions/cache@v2
        env:
          CACHE_SLUG: 4-cmake-${{matrix.compiler}}-${{matrix.build_type}}-${{matrix.cxx-extensions}}-${{matrix.exceptions}}
        with:
          path: |
            /github/home/.cache/ccache
            /github/home/.ccache
            /github/home/.config/ccache/ccache.conf
          key: ${{ env.CACHE_SLUG }}-${{ hashFiles('test/toolchain/**') }}
          restore-keys: |
            ${{ env.CACHE_SLUG }}-

      - name: Cache Report
        run: |
          ccache -s
          conan search

      - name: Build and Install GTest
        env:
          CXXFLAGS: ${{matrix.stdlib-flag}}
        run: |
          git clone https://github.com/google/googletest.git
          cd googletest
          git checkout 3c95bf552405fd0cc63cea0ca2f6c4cd89c8d356
          cmake \
            -DCMAKE_CXX_COMPILER_LAUNCHER:STRING=ccache \
            -DCMAKE_TOOLCHAIN_FILE:FILEPATH=$GITHUB_WORKSPACE/test/toolchain/${{matrix.toolchain}} \
            .
          cmake --build . --target install

      - name: Configure CNL
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DCMAKE_CXX_COMPILER_LAUNCHER:STRING=ccache \
            -DCMAKE_CXX_EXTENSIONS=${{matrix.cxx-extensions}} \
            -DCMAKE_TOOLCHAIN_FILE:FILEPATH=$GITHUB_WORKSPACE/test/toolchain/${{matrix.toolchain}} \
            -DCNL_EXCEPTIONS=${{matrix.exceptions}} \
            -DCNL_SANITIZE=ON \
            $GITHUB_WORKSPACE

      - name: Build CNL
        run: cmake --build $GITHUB_WORKSPACE --target test-all

      - name: Test CNL
        run: ctest --output-on-failure

      - name: Cache Report
        run: |
          ccache -s
          conan search

  # Install on mature Linux distro using only CMake
  install:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure CNL
        run: cmake $GITHUB_WORKSPACE

      - name: Install CNL
        run: sudo cmake --build $GITHUB_WORKSPACE --target install

  # Test shell scripts
  shellcheck:
    runs-on: ubuntu-20.04
    container: johnmcfarlane/cnl_ci:base-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Run shellcheck
        shell: bash
        run: $GITHUB_WORKSPACE/test/scripts/shellcheck

  # Test markdown
  markdownlint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Run markdownlint
        shell: bash
        run: |
          sudo snap install mdl
          $GITHUB_WORKSPACE/test/scripts/markdownlint

  # Test YAML
  yamllint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Run yamllint
        shell: bash
        run: |
          sudo apt install yamllint
          $GITHUB_WORKSPACE/test/scripts/yamllint
...
